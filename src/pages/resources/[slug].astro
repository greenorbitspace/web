---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

// Correct: define collectionName inside getStaticPaths
export async function getStaticPaths() {
  const collectionName = 'resources';  // <---- here, inside the function
  const posts = await getCollection(collectionName);
  return posts.map(post => ({
    params: { slug: post.slug ?? '' },
  }));
}

const collectionName = 'resources'; // You can also define it here for other usage
const { slug } = Astro.params;

const posts = await getCollection(collectionName);
const post = posts.find(p => p.slug === slug);

if (!post) {
  throw new Error(`No resources post found for slug: "${slug}"`);
}

const { data, Content } = post;

const formattedDate = data.pubdate
  ? new Date(data.pubdate).toLocaleDateString('en-GB', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;

const pageTitle = data.seoTitle || data.title || 'resources Post';
const pageDescription = data.seoDescription || data.description || data.title || 'resources post on Green Orbit Digital';
const pageURL = `https://greenorbit.space/resources/${slug}`;
const pageAuthor = data.author || 'Green Orbit Digital';
const pageImage = data.featuredImage || '/default-og-image.jpg';

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "resourcesPosting",
  headline: pageTitle,
  description: pageDescription,
  author: {
    "@type": "Person",
    name: pageAuthor,
  },
  datePublished: data.pubdate,
  url: pageURL,
  publisher: {
    "@type": "Organization",
    name: "Green Orbit Digital",
    logo: {
      "@type": "ImageObject",
      url: "https://greenorbit.space/logo.svg",
    },
  },
  ...(pageImage && { image: pageImage }),
};
---

<Layout 
  title={pageTitle} 
  description={pageDescription} 
  url={pageURL} 
  author={pageAuthor} 
  image={pageImage} 
  jsonLd={jsonLd}
>
  <Header />
  <main class="max-w-3xl mx-auto px-4 py-12" role="main" aria-label={pageTitle}>
    <article>
      <header class="mb-8">
        <h1 class="text-4xl font-extrabold leading-tight mb-4">{data.title}</h1>

        {formattedDate && (
          <time dateTime={data.pubdate} class="block text-sm text-gray-500">
            Published {formattedDate}
          </time>
        )}

        {data.author && (
          <p class="text-sm text-gray-600 mt-1">
            By <span class="font-medium">{data.author}</span>
          </p>
        )}

        {data.tags?.length && (
          <ul class="flex flex-wrap gap-2 mt-4 text-sm" aria-label="Post tags">
            {data.tags.map(tag => (
              <li key={tag}>
                <a
                  href={`/resources/?tag=${encodeURIComponent(tag)}`}
                  class="bg-blue-100 text-blue-800 px-2 py-1 rounded hover:bg-blue-200 transition"
                  rel="tag noopener noreferrer"
                >
                  #{tag}
                </a>
              </li>
            ))}
          </ul>
        )}
      </header>

      <section class="prose prose-lg max-w-none">
        {Content ? <Content /> : <p>No content available.</p>}
      </section>
    </article>
  </main>
  <Footer />
</Layout>