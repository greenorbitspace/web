---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import HeroSection from '../../components/HeroSection.astro';
import CareersBoilerplate from '../../components/CareersBoilerplate.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('careers');
  return posts.map(post => ({
    params: { slug: post.slug ?? post.id },
  }));
}

const { slug } = Astro.params;
const posts = await getCollection('careers');
const postEntry = posts.find(p => p.slug === slug || p.id === slug);

if (!postEntry) throw new Error(`No career post found for slug: "${slug}"`);

const { Content } = await postEntry.render();
const data = postEntry.data;

const formattedDate = data.pubdate
  ? new Date(data.pubdate).toLocaleDateString('en-GB', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;

// Meta info
const pageTitle = data.seoTitle || data.title || 'Career Opportunity';
const pageDescription = data.seoDescription || data.description || data.title || 'Career at Green Orbit Digital';
const pageURL = `https://greenorbit.space/careers/${slug}`;
const pageAuthor = data.author || 'Green Orbit Digital';
const pageImage = data.featuredImage || '/default-og-image.jpg';

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "JobPosting",
  headline: pageTitle,
  description: pageDescription,
  author: {
    "@type": "Organization",
    name: pageAuthor,
  },
  datePosted: data.pubdate,
  url: pageURL,
  hiringOrganization: {
    "@type": "Organization",
    name: "Green Orbit Digital",
    logo: {
      "@type": "ImageObject",
      url: "https://greenorbit.space/logo.svg",
    },
  },
  ...(pageImage && { image: pageImage }),
};
---

<Layout title={pageTitle} description={pageDescription} url={pageURL} jsonLd={jsonLd}>
  <Header />

  <main class="py-12">
    <HeroSection title={data.title} description={data.description || 'Join our team at Green Orbit Digital'} />

    <article class="max-w-4xl mx-auto p-6 prose dark:prose-invert">
      <header class="mb-8">
        <h1 class="text-4xl font-bold text-accent-500">{data.title}</h1>
        <p class="text-gray-600 dark:text-gray-300 mt-1">
          <span><strong>Location:</strong> {data.location}</span> |{' '}
          <span><strong>Type:</strong> {data.employment_type}</span> |{' '}
          <span><strong>Department:</strong> {data.department}</span> |{' '}
          <span><strong>Level:</strong> {data.seniority_level}</span>
        </p>
        {formattedDate && (
          <p class="text-sm text-gray-400 mt-1" aria-label={`Date posted: ${formattedDate}`}>
            Posted on {formattedDate}
          </p>
        )}
      </header>

      <section>
        <h2 class="text-2xl font-semibold mb-2">About the Role</h2>
        <p>{data.description}</p>
      </section>

      {data.responsibilities?.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mt-8 mb-2">Responsibilities</h2>
          <ul class="list-disc list-inside">
            {data.responsibilities.map((item, idx) => (
              <li key={idx}>{item}</li>
            ))}
          </ul>
        </section>
      )}

      {data.requirements?.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mt-8 mb-2">Requirements</h2>
          <ul class="list-disc list-inside">
            {data.requirements.map((item, idx) => (
              <li key={idx}>{item}</li>
            ))}
          </ul>
        </section>
      )}

      {data.benefits?.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mt-8 mb-2">Benefits</h2>
          <ul class="list-disc list-inside">
            {data.benefits.map((item, idx) => (
              <li key={idx}>{item}</li>
            ))}
          </ul>
        </section>
      )}

      {data.skills?.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mt-8 mb-2">Skills & Keywords</h2>
          <div class="flex flex-wrap gap-2">
            {data.skills.map((skill, idx) => (
              <span
                key={idx}
                class="inline-block bg-secondary-500 text-gray-800 dark:bg-secondary-700 dark:text-white px-3 py-1 rounded text-sm font-medium"
              >
                {skill}
              </span>
            ))}
          </div>
        </section>
      )}

      <section class="mt-10 text-center">
        <a
          href={data.apply_url}
          target="_blank"
          rel="noopener noreferrer"
          role="button"
          class="btn-primary inline-block px-6 py-3 rounded bg-accent-500 text-white font-semibold hover:bg-accent-700 transition"
          aria-label={`Apply for the ${data.title} role`}
        >
          Apply Now
        </a>
        <p class="mt-4 text-sm text-gray-600 dark:text-white">
          Or email your CV and portfolio to{' '}
          <a href={`mailto:${data.contact_email}`} class="text-accent-500 underline">
            {data.contact_email}
          </a>
        </p>
      </section>
        <CareersBoilerplate />
    </article>
  </main>

  <Footer />
</Layout>