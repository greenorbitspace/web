---
import { useEffect } from 'react';
---

<div id="earth-globe" style="width: 100%; height: 500px;"></div>

<script type="module">
  import * as THREE from 'three';
  import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';

  const container = document.getElementById('earth-globe');

  // Scene
  const scene = new THREE.Scene();

  // Camera
  const camera = new THREE.PerspectiveCamera(
    45,
    container.clientWidth / container.clientHeight,
    0.1,
    1000
  );
  camera.position.set(0, 0, 3);

  // Renderer
  const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
  renderer.setSize(container.clientWidth, container.clientHeight);
  container.appendChild(renderer.domElement);

  // Controls
  const controls = new OrbitControls(camera, renderer.domElement);
  controls.enableDamping = true;
  controls.dampingFactor = 0.05;
  controls.enableZoom = true;

  // Earth geometry
  const geometry = new THREE.SphereGeometry(1, 64, 64);
  const textureLoader = new THREE.TextureLoader();
  const earthTexture = await textureLoader.loadAsync('/images/earth_daymap.jpg');
  const material = new THREE.MeshStandardMaterial({ map: earthTexture });
  const earthMesh = new THREE.Mesh(geometry, material);
  scene.add(earthMesh);

  // Lighting
  const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);
  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);
  directionalLight.position.set(5, 3, 5);
  scene.add(ambientLight, directionalLight);

  // Animate
  const animate = () => {
    requestAnimationFrame(animate);
    earthMesh.rotation.y += 0.001; // Slow rotation
    controls.update();
    renderer.render(scene, camera);
  };

  animate();

  // Handle resize
  window.addEventListener('resize', () => {
    camera.aspect = container.clientWidth / container.clientHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(container.clientWidth, container.clientHeight);
  });
</script>